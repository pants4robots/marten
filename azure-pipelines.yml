trigger:
  batch: true
  branches:
    include:
      - master

pr:
  - master

resources:
  containers:
    - container: pg12
      image: oskardudycz/postgres-plv8:12-2
      ports:
        - 5432:5432
      env:
        POSTGRES_HOST_AUTH_METHOD: trust
    - container: pg11
      image: ionx/postgres-plv8:11.5
      ports:
        - 5432:5432
    - container: pg10
      image: ionx/postgres-plv8:10.6
      ports:
        - 5432:5432
    - container: pg9_6
      image: mysticmind/postgres-plv8:9.6-1.4
      ports:
        - 5432:5432

variables:
  config: Release
  disable_test_parallelization: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  dotnet_core_version: 5.0.x
  node_version: 10.x
  pg_db: marten_testing
  marten_testing_database: "Host=localhost;Port=5432;Database=marten_testing;Username=postgres;Password=Password12!"

jobs:
  - job: build_net5
    # timeoutInMinutes: 20
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        pg9_6:
          postgresService: pg9_6
          serializer: Newtonsoft
        pg10:
          postgresService: pg10
          serializer: Newtonsoft
        pg11:
          postgresService: pg11
          serializer: Newtonsoft
        pg12:
          postgresService: pg12
          serializer: Newtonsoft
        pg12_SystemTextJson:
          postgresService: pg12
          serializer: SystemTextJson
    services:
      postgres: $[ variables['postgresService'] ]
    steps:
      - task: UseDotNet@2
        displayName: Install .Net Core 5.0.x
        inputs:
          version: $(dotnet_core_version)
      - task: NodeTool@0
        displayName: Install Node.js
        inputs:
          versionSpec: $(node_version)
      - script: |
          PG_CONTAINER_NAME=$(docker ps --filter expose=5432/tcp --format {{.Names}})
          docker exec $PG_CONTAINER_NAME psql -U postgres -c "create database $(pg_db);"
          docker exec $PG_CONTAINER_NAME psql -U postgres -d $(pg_db) -c "create extension if not exists plv8;"
          docker exec $PG_CONTAINER_NAME psql -U postgres -c "DO 'plv8.elog(NOTICE, plv8.version);' LANGUAGE plv8;"
        displayName: Create db and add plv8 extension
      - script: ./build.sh --no-color ci
        displayName: Build
        env:
          DEFAULT_SERIALIZER: $(serializer)
